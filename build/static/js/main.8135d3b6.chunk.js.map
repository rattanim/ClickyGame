{"version":3,"sources":["components/NavMessage/index.js","components/Nav/index.js","components/Header/index.js","components/Container/index.js","components/Click/index.js","components/Footer/index.js","components/Game/index.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMessage","state","message","animating","renderMessage","_this","prevState","score","_ref","topScore","newState","this","props","setState","_this2","react_default","a","createElement","className","onAnimationEnd","Component","Nav","href","components_NavMessage","Header","Container","children","ClickItem","role","aria-label","onClick","handleClick","id","style","backgroundImage","concat","image","shake","Footer","alt","src","Game","data","handleCorrectGuess","newData","_this$state","newScore","newTopScore","Math","max","shuffleData","handleIncorrectGuess","resetData","map","item","Object","objectSpread","clicked","i","length","j","floor","random","temp","handleItemClick","newItem","components_Nav","components_Header","components_Container","Click","key","components_Footer","App","components_Game","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8135d3b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nclass NavMessage extends Component {\r\n\tstate = {\r\n\t\tmessage: '',\r\n\t\tanimating: false\r\n\t};\r\n\r\n\tcomponentDidUpdate({ score, topScore }, prevState) {\r\n\t\tconst newState = { animating: true };\r\n\r\n\t\tif (score === 0 && topScore === 0) {\r\n\t\t\tnewState.message = '';\r\n\t\t} else if (score === 0 && topScore > 0) {\r\n\t\t\tnewState.message = 'incorrect';\r\n\t\t} else {\r\n\t\t\tnewState.message = 'correct';\r\n\t\t}\r\n\t\tif (score !== this.props.score || this.state.message !== newState.message) {\r\n\t\t\tthis.setState(newState);\r\n\t\t}\r\n\t}\r\n\r\n\trenderMessage = () => {\r\n\t\tswitch (this.state.message) {\r\n\t\t\tcase 'correct':\r\n\t\t\t\treturn 'You Guessed Correctly!';\r\n\t\t\tcase 'incorrect':\r\n\t\t\t\treturn 'You guessed wrong!';\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Click on a picture to start!';\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<li\r\n\t\t\t\tclassName={this.state.animating ? this.state.message : ''}\r\n\t\t\t\tonAnimationEnd={() => this.setState({ animating: false })}\r\n\t\t\t>\r\n\t\t\t\t{this.renderMessage()}\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NavMessage;\r\n","import React from 'react';\r\nimport NavMessage from '../NavMessage';\r\nimport './style.css';\r\n\r\nfunction Nav(props) {\r\n\treturn (\r\n\t\t<nav className=\"navbar\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li className=\"brand\">\r\n\t\t\t\t\t<a href=\"/\"> Click Game</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<NavMessage score={props.score} topScore={props.topScore} />\r\n\t\t\t\t<li>\r\n\t\t\t\t\tScore: {props.score} | Top Score: {props.topScore}\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1>Click Game!</h1>\r\n\t\t\t<h2> Click on a picture to get points! But if you click on the same image twice the game restarts!!</h2>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Container(props) {\r\n\treturn <main className=\"container\">{props.children}</main>;\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction ClickItem(props) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"img\"\r\n\t\t\taria-label=\"click item\"\r\n\t\t\tonClick={() => props.handleClick(props.id)}\r\n\t\t\tstyle={{ backgroundImage: `url(\"${props.image}\")` }}\r\n\t\t\tclassName={`click-item${props.shake ? ' shake' : ''}`}\r\n\t\t/>\r\n\t);\r\n}\r\nexport default ClickItem;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<div className=\"bottom\">\r\n\t\t\t\tClick Game! <img alt=\"react\" src=\"assets/images/react.svg\" />\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport Nav from '../Nav';\r\nimport Header from '../Header';\r\nimport Container from '../Container';\r\nimport Click from '../Click';\r\nimport Footer from '../Footer';\r\nimport data from '../../data.json';\r\n\r\nclass Game extends Component {\r\n\tstate = {\r\n\t\tdata,\r\n\t\tscore: 0,\r\n\t\ttopScore: 0\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({ data: this.shuffleData(this.state.data) });\r\n\t}\r\n\r\n\thandleCorrectGuess = (newData) => {\r\n\t\tconst { topScore, score } = this.state;\r\n\t\tconst newScore = score + 1;\r\n\t\tconst newTopScore = Math.max(newScore, topScore);\r\n\r\n\t\tthis.setState({\r\n\t\t\tdata: this.shuffleData(newData),\r\n\t\t\tscore: newScore,\r\n\t\t\ttopScore: newTopScore\r\n\t\t});\r\n\t};\r\n\r\n\thandleIncorrectGuess = (data) => {\r\n\t\tthis.setState({\r\n\t\t\tdata: this.resetData(data),\r\n\t\t\tscore: 0\r\n\t\t});\r\n\t};\r\n\r\n\tresetData = (data) => {\r\n\t\tconst resetData = data.map((item) => ({ ...item, clicked: false }));\r\n\t\treturn this.shuffleData(resetData);\r\n\t};\r\n\r\n\tshuffleData = (data) => {\r\n\t\tlet i = data.length - 1;\r\n\t\twhile (i > 0) {\r\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t\tconst temp = data[i];\r\n\t\t\tdata[i] = data[j];\r\n\t\t\tdata[j] = temp;\r\n\t\t\ti--;\r\n\t\t}\r\n\t\treturn data;\r\n\t};\r\n\r\n\thandleItemClick = (id) => {\r\n\t\tlet guessedCorrectly = false;\r\n\t\tconst newData = this.state.data.map((item) => {\r\n\t\t\tconst newItem = { ...item };\r\n\t\t\tif (newItem.id === id) {\r\n\t\t\t\tif (!newItem.clicked) {\r\n\t\t\t\t\tnewItem.clicked = true;\r\n\t\t\t\t\tguessedCorrectly = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn newItem;\r\n\t\t});\r\n\t\tguessedCorrectly ? this.handleCorrectGuess(newData) : this.handleCorrectGuess(newData);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Nav score={this.state.score} topScore={this.state.topScore} />\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{this.state.data.map((item) => (\r\n\t\t\t\t\t\t<Click\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t\t\tshake={!this.state.score && this.state.topScore}\r\n\t\t\t\t\t\t\thandleClick={this.handleItemClick}\r\n\t\t\t\t\t\t\timage={item.image}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport Game from './components/Game';\r\n\r\nfunction App() {\r\n\treturn <Game />;\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}